/*
 * Generated by the Jasper component of Apache Tomcat
 * Version: Apache Tomcat/8.5.16
 * Generated at: 2017-07-20 12:37:41 UTC
 * Note: The last modified time of this file was set to
 *       the last modified time of the source file after
 *       generation to assist with modification tracking.
 */
package org.apache.jsp;

import javax.servlet.*;
import javax.servlet.http.*;
import javax.servlet.jsp.*;

public final class test_jsp extends org.apache.jasper.runtime.HttpJspBase
    implements org.apache.jasper.runtime.JspSourceDependent,
                 org.apache.jasper.runtime.JspSourceImports {

  private static final javax.servlet.jsp.JspFactory _jspxFactory =
          javax.servlet.jsp.JspFactory.getDefaultFactory();

  private static java.util.Map<java.lang.String,java.lang.Long> _jspx_dependants;

  private static final java.util.Set<java.lang.String> _jspx_imports_packages;

  private static final java.util.Set<java.lang.String> _jspx_imports_classes;

  static {
    _jspx_imports_packages = new java.util.HashSet<>();
    _jspx_imports_packages.add("javax.servlet");
    _jspx_imports_packages.add("javax.servlet.http");
    _jspx_imports_packages.add("javax.servlet.jsp");
    _jspx_imports_classes = null;
  }

  private volatile javax.el.ExpressionFactory _el_expressionfactory;
  private volatile org.apache.tomcat.InstanceManager _jsp_instancemanager;

  public java.util.Map<java.lang.String,java.lang.Long> getDependants() {
    return _jspx_dependants;
  }

  public java.util.Set<java.lang.String> getPackageImports() {
    return _jspx_imports_packages;
  }

  public java.util.Set<java.lang.String> getClassImports() {
    return _jspx_imports_classes;
  }

  public javax.el.ExpressionFactory _jsp_getExpressionFactory() {
    if (_el_expressionfactory == null) {
      synchronized (this) {
        if (_el_expressionfactory == null) {
          _el_expressionfactory = _jspxFactory.getJspApplicationContext(getServletConfig().getServletContext()).getExpressionFactory();
        }
      }
    }
    return _el_expressionfactory;
  }

  public org.apache.tomcat.InstanceManager _jsp_getInstanceManager() {
    if (_jsp_instancemanager == null) {
      synchronized (this) {
        if (_jsp_instancemanager == null) {
          _jsp_instancemanager = org.apache.jasper.runtime.InstanceManagerFactory.getInstanceManager(getServletConfig());
        }
      }
    }
    return _jsp_instancemanager;
  }

  public void _jspInit() {
  }

  public void _jspDestroy() {
  }

  public void _jspService(final javax.servlet.http.HttpServletRequest request, final javax.servlet.http.HttpServletResponse response)
      throws java.io.IOException, javax.servlet.ServletException {

    final java.lang.String _jspx_method = request.getMethod();
    if (!"GET".equals(_jspx_method) && !"POST".equals(_jspx_method) && !"HEAD".equals(_jspx_method) && !javax.servlet.DispatcherType.ERROR.equals(request.getDispatcherType())) {
      response.sendError(HttpServletResponse.SC_METHOD_NOT_ALLOWED, "JSPs only permit GET POST or HEAD");
      return;
    }

    final javax.servlet.jsp.PageContext pageContext;
    javax.servlet.http.HttpSession session = null;
    final javax.servlet.ServletContext application;
    final javax.servlet.ServletConfig config;
    javax.servlet.jsp.JspWriter out = null;
    final java.lang.Object page = this;
    javax.servlet.jsp.JspWriter _jspx_out = null;
    javax.servlet.jsp.PageContext _jspx_page_context = null;


    try {
      response.setContentType("text/html; charset=EUC-KR");
      pageContext = _jspxFactory.getPageContext(this, request, response,
      			null, true, 8192, true);
      _jspx_page_context = pageContext;
      application = pageContext.getServletContext();
      config = pageContext.getServletConfig();
      session = pageContext.getSession();
      out = pageContext.getOut();
      _jspx_out = out;

      out.write("\r\n");
      out.write("<!DOCTYPE html PUBLIC \"-//W3C//DTD HTML 4.01 Transitional//EN\" \"http://www.w3.org/TR/html4/loose.dtd\">\r\n");
      out.write("<html>\r\n");
      out.write("<head>\r\n");
      out.write("<meta http-equiv=\"Content-Type\" content=\"text/html; charset=EUC-KR\">\r\n");
      out.write("<title>Insert title here</title>\r\n");
      out.write("</head>\r\n");
      out.write("<body>\r\n");
      out.write("<!-- 차트 api 소스 -->\r\n");
      out.write("<script type=\"text/javascript\"\r\n");
      out.write("\tsrc=\"https://www.gstatic.com/charts/loader.js\"></script>\r\n");
      out.write("<script type=\"text/javascript\">\r\n");
      out.write("    google.charts.load('current', {'packages':['corechart']});\r\n");
      out.write("    \r\n");
      out.write("    \r\n");
      out.write("    function selectHandler(e) {\r\n");
      out.write("  \t  alert('The user selected' + PieChart.getSelection().length + ' items.');\r\n");
      out.write("  }\r\n");
      out.write("    \r\n");
      out.write("    function drawChart() { //도넛차트 Start\r\n");
      out.write("        var data = google.visualization.arrayToDataTable([\r\n");
      out.write("          ['Task', '투표수'],\r\n");
      out.write("          ['보쌈',    15],\r\n");
      out.write("          ['닭발',    7],\r\n");
      out.write("          ['피자',  3]\r\n");
      out.write("        ]);\r\n");
      out.write("\r\n");
      out.write("        var options = {\r\n");
      out.write("          title: '프로젝트 후 회식을 어디서?',\r\n");
      out.write("          pieHole: 0.4,\r\n");
      out.write("          fontSize : 15\r\n");
      out.write("        };\r\n");
      out.write("\r\n");
      out.write("        var chart = new google.visualization.PieChart(document.getElementById('donutchart'));\r\n");
      out.write("        chart.draw(data, options);\r\n");
      out.write("        \r\n");
      out.write("        //이벤트 핸들러\r\n");
      out.write("        google.visualization.events.addListener(chart, 'select', selectHandler);\r\n");
      out.write("        function selectHandler(e) {\r\n");
      out.write("        \t\r\n");
      out.write("        \tdocument.getElementById(\"body\").innerHTML +='<div id=\"abc\"><div id=\"popupContact\"><form action=\"#의견처리\" id=\"voteform\" method=\"post\" name=\"voteform\"><img id=\"close\" width=\"25px\" height=\"25px\" src=\"images/x.png\" onclick=\"div_hide()\"><h2 id=\"headH2\">의견을 작성해주세요!</h2><hr><input id=\"name_readonly\" name=\"name\" type=\"text\" value=\"변다영\" readonly><select id=\"bias\" name=\"bias\" style=\"width:82%;padding:10px;margin-top:30px;border:1px solid #ccc;\tpadding-left:40px;font-size:16px;font-family:raleway\"><option value=\"\">선택해주세요</option><option value=\"보쌈\">보쌈</option><option value=\"닭발\">닭발</option><option value=\"피자\">피자</option>\t</select><textarea id=\"opinion\" name=\"opinion\" placeholder=\"Please tell me your voice!\"></textarea><a href=\"javascript:%20check_empty()\" id=\"submit\">Send</a></form></div></div>';\r\n");
      out.write("        \tconsole.log(document.getElementById(\"body\").innerHTML);\r\n");
      out.write("        \tdocument.getElementById('abc').style.display = \"block\";\r\n");
      out.write("        }\r\n");
      out.write("    }//도넛차트 End\r\n");
      out.write("    \r\n");
      out.write("    function drawSeriesChart() { //버블차트 Start\r\n");
      out.write("\r\n");
      out.write("        var data = google.visualization.arrayToDataTable([\r\n");
      out.write("          ['Nickname', 'x축', 'y축', \t\t'버블색깔',        '버블크기'],\r\n");
      out.write("          ['김태정',    92.11,   1.67,    '컴퓨터공학',  \t\t33073],\r\n");
      out.write("          ['변다영',    85.05,   1.36,    '경영정보학',       40190],\r\n");
      out.write("          ['이성민',    60.60,   1.84,     '데이터학',       55230],\r\n");
      out.write("          ['이형건',    55.42,   2.78,     '컴퓨터공학',  \t24716]\r\n");
      out.write("        ]);\r\n");
      out.write("\r\n");
      out.write("        var options = {\r\n");
      out.write("          title: '보쌈부서의 '+ '팀원 별 기여도/참여도',\r\n");
      out.write("          fontSize : 18,\r\n");
      out.write("          /* titleTextStyle : { fontsize : 30}, */\r\n");
      out.write("          hAxis: {title: 'x축'},\r\n");
      out.write("          vAxis: {title: 'y축'},\r\n");
      out.write("          bubble: {textStyle: {fontSize: 15}}\r\n");
      out.write("          };\r\n");
      out.write("\r\n");
      out.write("        var chart = new google.visualization.BubbleChart(document.getElementById('series_chart_div'));\r\n");
      out.write("        chart.draw(data, options);\r\n");
      out.write("      }//버블차트 END\r\n");
      out.write("      \r\n");
      out.write("      google.charts.setOnLoadCallback(drawChart);//도넛차트 \r\n");
      out.write("      google.charts.setOnLoadCallback(drawSeriesChart);//버블차트\r\n");
      out.write("      </script>\r\n");
      out.write("<!-- 차트 api소스END -->\r\n");
      out.write("</body>\r\n");
      out.write("</html>");
    } catch (java.lang.Throwable t) {
      if (!(t instanceof javax.servlet.jsp.SkipPageException)){
        out = _jspx_out;
        if (out != null && out.getBufferSize() != 0)
          try {
            if (response.isCommitted()) {
              out.flush();
            } else {
              out.clearBuffer();
            }
          } catch (java.io.IOException e) {}
        if (_jspx_page_context != null) _jspx_page_context.handlePageException(t);
        else throw new ServletException(t);
      }
    } finally {
      _jspxFactory.releasePageContext(_jspx_page_context);
    }
  }
}
